a = x as string a
a = x as keyof other a
a= await y a
a= new y a
a= void y a
a= typeof y a
a= class A extends Y {} a
a=x . y a
a=x ! y a
a=x * y a
a=x / y a
a=x ** y a
a=x % y a
a=x & y a
a=x && y a
a=x ^ y a
a=x ~ y a
a=x | y a
a=x || y a
a=x ?? y a
a=x ? y : z a
a=x == y a
a=x === y a
a=x != y a
a=x !== y a
a=x <= y a
a=x >= y a
a=x &= y a
a=x &&= y a
a=x |= y a
a=x ||= y a
a=x ^= y a
a=x ~= y a
a=x >>= y a
a=x >>>= y a
a=x -= y a
a=x /= y a
a=x *= y a
a=x **= y a
a=x %= y a
a=x += y a
a=x in;
a=x in y a
a=x in=y
a=x in, y
a=x instanceof y a
a=x ++ + y a
a=x+ ++ y a
a=x ++ y a
a=x > y a
a=x >> y a
a=x >>> y a
a=x ( y ) a
a=x { y } a
a=x => y a
a=x => ( y ) a
a=x => { y } a
a=( x ) { y } a
a = (x) => { console.log("y") } a
a = async x => { console.log("y") } a
a = function (x) { console.log("y") } a
a = x => { console.log("y") } a
a = async function (x) { console.log("y") } a

<a= await y a/>
<a= new y a/>
<a= void y a/>
<a= typeof y a/>
<a= class A extends Y {} a/>
<a=x . y a/>
<a=x ! y a/>
<a=x * y a/>
<a=x / y a/>
<a=x ** y a/>
<a=x % y a/>
<a=x & y a/>
<a=x && y a/>
<a=x ^ y a/>
<a=x ~ y a/>
<a=x | y a/>
<a=x || y a/>
<a=x ?? y a/>
<a=x ? y : z a/>
<a=x == y a/>
<a=x === y a/>
<a=x != y a/>
<a=x !== y a/>
<a=x <= y a/>
<a=x >= y a/>
<a=x &= y a/>
<a=x &&= y a/>
<a=x |= y a/>
<a=x ||= y a/>
<a=x ^= y a/>
<a=x ~= y a/>
<a=x >>= y a/>
<a=x >>>= y a/>
<a=x -= y a/>
<a=x /= y a/>
<a=x *= y a/>
<a=x **= y a/>
<a=x %= y a/>
<a=x += y a/>
<a=x in;/>
<a=x in y a/>
<a=x in=y/>
<a=x in, y/>
<a=x instanceof y a/>
<a=x ++ + y a/>
<a=x + ++ y a/>
<a=x ++ y a/>
<a=x > y <a/>
<a=x >> y a/>
<a=x >>> y a/>
<a=x ( y ) a/>
<a=x { y } a/>
<a=x => y a/>
<a=x => ( y ) a/>
<a=x => { y } a/>
<a=( x ) { y } a/>
<a= (x) => { console.log("y") } a/>
<a= async x => { console.log("y") } a/>
<a= function (x) { console.log("y") } a/>
<a= x => { console.log("y") } a/>
<a= async function (x) { console.log("y") } a/>